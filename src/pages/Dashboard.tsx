
import { useEffect } from 'react';
import { useNavigate, Link } from 'react-router-dom';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { useAuth } from '@/contexts/AuthContext';
import { NavHeader } from '@/components/NavHeader';
import { 
  Cloud, 
  TrendingUp, 
  Award, 
  Users, 
  Thermometer, 
  Droplets, 
  Wind,
  Sun
} from 'lucide-react';

const Dashboard = () => {
  const { isAuthenticated, user } = useAuth();
  const navigate = useNavigate();

  useEffect(() => {
    if (!isAuthenticated) {
      navigate('/auth');
    }
  }, [isAuthenticated, navigate]);

  const services = [
    {
      title: '‡§Æ‡•å‡§∏‡§Æ ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä',
      description: '‡§Ü‡§ú ‡§ï‡§æ ‡§Æ‡•å‡§∏‡§Æ ‡§î‡§∞ ‡§Ö‡§ó‡§≤‡•á 7 ‡§¶‡§ø‡§®‡•ã‡§Ç ‡§ï‡§æ ‡§™‡•Ç‡§∞‡•ç‡§µ‡§æ‡§®‡•Å‡§Æ‡§æ‡§®',
      icon: Cloud,
      link: '/weather',
      color: 'bg-blue-500'
    },
    {
      title: '‡§¨‡§æ‡§ú‡§æ‡§∞ ‡§≠‡§æ‡§µ',
      description: '‡§∏‡§≠‡•Ä ‡§´‡§∏‡§≤‡•ã‡§Ç ‡§ï‡•á ‡§Ü‡§ú ‡§ï‡•á ‡§¨‡§æ‡§ú‡§æ‡§∞ ‡§≠‡§æ‡§µ ‡§¶‡•á‡§ñ‡•á‡§Ç',
      icon: TrendingUp,
      link: '/market',
      color: 'bg-green-500'
    },
    {
      title: '‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Ç',
      description: '‡§ï‡§ø‡§∏‡§æ‡§®‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§®‡§µ‡•Ä‡§®‡§§‡§Æ ‡§∏‡§∞‡§ï‡§æ‡§∞‡•Ä ‡§Ø‡•ã‡§ú‡§®‡§æ‡§è‡§Ç',
      icon: Award,
      link: '/schemes',
      color: 'bg-orange-500'
    },
    {
      title: '‡§µ‡§ø‡§∂‡•á‡§∑‡§ú‡•ç‡§û ‡§∏‡§≤‡§æ‡§π',
      description: '‡§ï‡•É‡§∑‡§ø ‡§µ‡§ø‡§∂‡•á‡§∑‡§ú‡•ç‡§û‡•ã‡§Ç ‡§∏‡•á ‡§∏‡•Ä‡§ß‡•Ä ‡§¨‡§æ‡§§‡§ö‡•Ä‡§§',
      icon: Users,
      link: '/expert',
      color: 'bg-purple-500'
    }
  ];

  const todayWeather = {
    temp: '28¬∞C',
    condition: '‡§ß‡•Ç‡§™',
    humidity: '65%',
    wind: '12 km/h'
  };

  const marketHighlights = [
    { crop: '‡§ó‡•á‡§π‡•Ç‡§Ç', price: '‚Çπ2,150/‡§ï‡•ç‡§µ‡§ø‡§Ç‡§ü‡§≤', change: '+2.5%' },
    { crop: '‡§ö‡§æ‡§µ‡§≤', price: '‚Çπ1,850/‡§ï‡•ç‡§µ‡§ø‡§Ç‡§ü‡§≤', change: '+1.2%' },
    { crop: '‡§Æ‡§ï‡•ç‡§ï‡§æ', price: '‚Çπ1,680/‡§ï‡•ç‡§µ‡§ø‡§Ç‡§ü‡§≤', change: '-0.8%' }
  ];

  if (!isAuthenticated) {
    return null;
  }

  return (
    <div className="min-h-screen bg-gray-50">
      <NavHeader />
      
      <div className="container mx-auto px-4 py-8">
        {/* Welcome Section */}
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-800 mb-2">
            ‡§®‡§Æ‡§∏‡•ç‡§ï‡§æ‡§∞, {user?.name}! üåæ
          </h1>
          <p className="text-gray-600">
            ‡§Ü‡§ú ‡§Ü‡§™‡§ï‡•Ä ‡§ñ‡•á‡§§‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡•ç‡§Ø‡§æ ‡§®‡§Ø‡§æ ‡§π‡•à, ‡§¶‡•á‡§ñ‡§§‡•á ‡§π‡•à‡§Ç
          </p>
        </div>

        {/* Quick Info Cards */}
        <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
          <Card className="border-blue-200">
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium text-blue-600">‡§Ü‡§ú ‡§ï‡§æ ‡§§‡§æ‡§™‡§Æ‡§æ‡§®</CardTitle>
              <Thermometer className="h-4 w-4 text-blue-500" />
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold text-blue-700">{todayWeather.temp}</div>
              <p className="text-xs text-blue-600">{todayWeather.condition}</p>
            </CardContent>
          </Card>

          <Card className="border-cyan-200">
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium text-cyan-600">‡§®‡§Æ‡•Ä</CardTitle>
              <Droplets className="h-4 w-4 text-cyan-500" />
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold text-cyan-700">{todayWeather.humidity}</div>
              <p className="text-xs text-cyan-600">‡§∏‡§æ‡§Æ‡§æ‡§®‡•ç‡§Ø ‡§∏‡•ç‡§§‡§∞</p>
            </CardContent>
          </Card>

          <Card className="border-green-200">
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium text-green-600">‡§π‡§µ‡§æ ‡§ï‡•Ä ‡§ó‡§§‡§ø</CardTitle>
              <Wind className="h-4 w-4 text-green-500" />
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold text-green-700">{todayWeather.wind}</div>
              <p className="text-xs text-green-600">‡§Æ‡§ß‡•ç‡§Ø‡§Æ</p>
            </CardContent>
          </Card>

          <Card className="border-orange-200">
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <CardTitle className="text-sm font-medium text-orange-600">‡§Ø‡•Ç‡§µ‡•Ä ‡§á‡§Ç‡§°‡•á‡§ï‡•ç‡§∏</CardTitle>
              <Sun className="h-4 w-4 text-orange-500" />
            </CardHeader>
            <CardContent>
              <div className="text-2xl font-bold text-orange-700">6</div>
              <p className="text-xs text-orange-600">‡§Æ‡§ß‡•ç‡§Ø‡§Æ</p>
            </CardContent>
          </Card>
        </div>

        {/* Main Services */}
        <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
          {services.map((service, index) => {
            const IconComponent = service.icon;
            return (
              <Card key={index} className="hover:shadow-lg transition-shadow cursor-pointer group">
                <Link to={service.link}>
                  <CardHeader className="text-center">
                    <div className={`${service.color} w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform`}>
                      <IconComponent className="h-8 w-8 text-white" />
                    </div>
                    <CardTitle className="text-gray-800">{service.title}</CardTitle>
                  </CardHeader>
                  <CardContent>
                    <CardDescription className="text-center">
                      {service.description}
                    </CardDescription>
                  </CardContent>
                </Link>
              </Card>
            );
          })}
        </div>

        {/* Market Highlights */}
        <Card className="mb-8">
          <CardHeader>
            <CardTitle className="flex items-center space-x-2">
              <TrendingUp className="h-5 w-5 text-green-600" />
              <span>‡§Ü‡§ú ‡§ï‡•á ‡§¨‡§æ‡§ú‡§æ‡§∞ ‡§≠‡§æ‡§µ</span>
            </CardTitle>
            <CardDescription>‡§™‡•ç‡§∞‡§Æ‡•Å‡§ñ ‡§´‡§∏‡§≤‡•ã‡§Ç ‡§ï‡•Ä ‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§ï‡•Ä‡§Æ‡§§‡•á‡§Ç</CardDescription>
          </CardHeader>
          <CardContent>
            <div className="grid md:grid-cols-3 gap-4">
              {marketHighlights.map((item, index) => (
                <div key={index} className="flex justify-between items-center p-3 bg-gray-50 rounded-lg">
                  <div>
                    <p className="font-medium text-gray-800">{item.crop}</p>
                    <p className="text-sm text-gray-600">{item.price}</p>
                  </div>
                  <span className={`text-sm font-medium ${
                    item.change.startsWith('+') ? 'text-green-600' : 'text-red-600'
                  }`}>
                    {item.change}
                  </span>
                </div>
              ))}
            </div>
            <div className="mt-4">
              <Button variant="outline" asChild className="w-full">
                <Link to="/market">‡§∏‡§≠‡•Ä ‡§≠‡§æ‡§µ ‡§¶‡•á‡§ñ‡•á‡§Ç</Link>
              </Button>
            </div>
          </CardContent>
        </Card>

        {/* Quick Tips */}
        <Card>
          <CardHeader>
            <CardTitle>‡§Ü‡§ú ‡§ï‡•Ä ‡§∏‡§≤‡§æ‡§π</CardTitle>
            <CardDescription>‡§Ü‡§ú ‡§ï‡•á ‡§Æ‡•å‡§∏‡§Æ ‡§ï‡•á ‡§Ö‡§®‡•Å‡§∏‡§æ‡§∞ ‡§ñ‡•á‡§§‡•Ä ‡§ï‡•Ä ‡§∏‡§≤‡§æ‡§π</CardDescription>
          </CardHeader>
          <CardContent>
            <div className="space-y-3">
              <div className="flex items-start space-x-3">
                <div className="w-2 h-2 bg-green-500 rounded-full mt-2"></div>
                <p className="text-gray-700">‡§Ü‡§ú ‡§ß‡•Ç‡§™ ‡§Ö‡§ö‡•ç‡§õ‡•Ä ‡§π‡•à, ‡§´‡§∏‡§≤ ‡§ï‡•Ä ‡§∏‡§ø‡§Ç‡§ö‡§æ‡§à ‡§ï‡•á ‡§≤‡§ø‡§è ‡§â‡§™‡§Ø‡•Å‡§ï‡•ç‡§§ ‡§∏‡§Æ‡§Ø ‡§π‡•à‡•§</p>
              </div>
              <div className="flex items-start space-x-3">
                <div className="w-2 h-2 bg-blue-500 rounded-full mt-2"></div>
                <p className="text-gray-700">‡§®‡§Æ‡•Ä ‡§ï‡§æ ‡§∏‡•ç‡§§‡§∞ ‡§Ö‡§ö‡•ç‡§õ‡§æ ‡§π‡•à, ‡§ï‡•Ä‡§ü‡§®‡§æ‡§∂‡§ï ‡§ï‡§æ ‡§õ‡§ø‡§°‡§º‡§ï‡§æ‡§µ ‡§® ‡§ï‡§∞‡•á‡§Ç‡•§</p>
              </div>
              <div className="flex items-start space-x-3">
                <div className="w-2 h-2 bg-orange-500 rounded-full mt-2"></div>
                <p className="text-gray-700">‡§ó‡•á‡§π‡•Ç‡§Ç ‡§ï‡•Ä ‡§ï‡•Ä‡§Æ‡§§ ‡§¨‡§¢‡§º ‡§∞‡§π‡•Ä ‡§π‡•à, ‡§¨‡•á‡§ö‡§®‡•á ‡§ï‡§æ ‡§Ö‡§ö‡•ç‡§õ‡§æ ‡§∏‡§Æ‡§Ø ‡§π‡•à‡•§</p>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default Dashboard;
